@using Core.Models
@typeparam T

@if (ListEntities == null || ListEntities.Count == 0)
{
    <br />
    <div>
        <img src="https://media.giphy.com/media/sSgvbe1m3n93G/giphy.gif" alt="Load" />
    </div>
    <br />
}
else
{
    <br />
    <table class="table table-responsive table-hover">
        <thead>
            <tr>
                <th>#</th>
                @foreach (var property in ListProperties)
                {
                    if (property.Name == nameof(Entity.Id))
                    {
                        <th hidden="hidden">@property.Name</th>
                    }
                    else
                    {
                        <th>@property.Name</th>
                    }
                }
                @if (Crud == true)
                {
                    <th>Read</th>
                    <th>Update</th>
                    <th>Delete</th>
                    <th><button class="btn btn-sm btn-primary" type="button" @onclick="@Create">Create</button></th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var element in PaginatedEntities)
            {
                <tr>
                    <td>@(ListEntities.IndexOf(element))</td>
                    @foreach (var property in ListProperties)
                    {
                        if (property.Name == nameof(Entity.Id))
                        {
                            <td hidden="hidden">@property.GetValue(element)</td>
                        }
                        else
                        {
                            <td>@property.GetValue(element)</td>
                        }
                    }
                    @if (Crud == true)
                    {
                        if (typeof(T).BaseType == typeof(Entity))
                        {
                            var entity = element as Entity;
                            <td><button class="btn btn-sm btn-primary" type="button" @onclick="@(() => Read(entity?.Id))">Read</button></td>
                            <td><button class="btn btn-sm btn-primary" type="button" @onclick="@(() => Update(entity?.Id))">Update</button></td>
                            <td><button class="btn btn-sm btn-primary" type="button" @onclick="@(() => Delete(entity?.Id))">Delete</button></td>
                        }
                    }
                </tr>
            }
        </tbody>
    </table>
    @if (Paginated)
    {
        <nav>
            <ul class="pagination">
                @if (Index != 1)
                {
                    <li class="page-item">
                        <button class="btn btn-secondary" @onclick="(() => GoToPage(Index - 1))">Prev.</button>
                    </li>
                    @if (Index >= 10)
                    {
                        <li class="page-item">
                            <button class="btn btn-info" @onclick="(() => GoToPage(JumpDown))">@(JumpDown)...</button>
                        </li>
                    }
                }
                @foreach (var i in ButtonList)
                {
                    <li class="page-item">
                        @{var y = i;}
                        <button class="@(i == Index ? "btn btn-success" : "btn btn")" @onclick="(() => GoToPage(y))">@y</button>
                    </li>
                }
                @if (!ButtonList.Contains(NumberOfPage))
                {
                    <li class="page-item">
                        <button class="btn btn-info" @onclick="(() => GoToPage(JumpUp))">@(JumpUp)...</button>
                    </li>
                }
                @if (Index != NumberOfPage)
                {
                    <li class="page-item">
                        <button class="btn btn-secondary" @onclick="(() => GoToPage(Index + 1))">Suiv.</button>
                    </li>
                }
                <li>
                    <div class="row">
                        <div class="col-6" align="center">
                            <div class=" btn btn-link disabled">
                                Page @Index/@NumberOfPage
                            </div>
                        </div>
                        <div class="col-5">
                            <select class="custom-select" @onchange="@GotoInputSelect">
                                @for (var i = 1; i <= NumberOfPage; i++)
                                {
                                    <option value="@i">@i</option>
                                }
                            </select>
                        </div>
                    </div>
                </li>
            </ul>
        </nav>
    }
}
